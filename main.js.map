{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-18',\r\n    headers: {\r\n      authorization: 'fb23e767-a971-4593-a4ab-12aecf4b3efd',\r\n      'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nconst handleRes = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const handleErr = (err) => {\r\n    console.log(err);\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n      return fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers\r\n      })\r\n      .then(handleRes)\r\n}\r\n\r\nexport const getUserData = () => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers\r\n      })\r\n      .then(handleRes)\r\n}\r\n\r\nexport const updateUser = (nameValue, jobValue) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n          name: nameValue,\r\n          about: jobValue\r\n        })\r\n      })\r\n      .then(handleRes)\r\n}\r\n\r\nexport const addNewCard = (cardNameValue, urlValue) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n          name: cardNameValue,\r\n          link: urlValue\r\n        })\r\n      })\r\n    .then(handleRes)\r\n}\r\n\r\nexport const apiDeleteCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n    .then(handleRes)\r\n}\r\n\r\nexport const unlikeCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n    .then(handleRes)\r\n}\r\n\r\nexport const likeCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n    })\r\n    .then(handleRes)\r\n}\r\n\r\nexport const avatarUser = (avatarUrl) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarUrl\r\n      })\r\n    })\r\n    .then(handleRes)\r\n}\r\n\r\n","\r\n//базовые функции открытия и закрытия (для функций кликеров дальше)\r\nexport function openPopupDef(element) {\r\n    element.classList.add('popup_is-opened');\r\n    element.classList.add('popup_is-animated');\r\n    document.addEventListener('keydown', addCloseEscListener)\r\n}\r\n\r\nexport function closePopupDef(element) {\r\n    element.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', addCloseEscListener)\r\n}\r\n\r\n//функции для закрытия окон через крестик, esc и фон (для всех сразу)\r\nexport function addClosePopupButtonListener(element) {\r\n    const closeButton = element.querySelector('.popup__close');\r\n    closeButton.addEventListener('click', () => {\r\n        closePopupDef(element);\r\n    })\r\n}\r\n\r\nexport function addClosePopupByOverlayListener(element) {\r\n    element.addEventListener('click', function(evt) {\r\n        if (evt.target.classList.contains('popup_is-opened')) {\r\n            closePopupDef(element);\r\n        }\r\n    })\r\n}\r\n\r\nexport function addCloseEscListener(evt)  { \r\n    if (evt.key === 'Escape')  { \r\n        closePopupDef(document.querySelector('.popup_is-opened')); \r\n    } \r\n}\r\n\r\nexport function renderLoading(isLoading, button) {\r\n    button.textContent = isLoading ? 'Сохранение...' : 'Сохранить'; \r\n}\r\n","import {handleErr, apiDeleteCard, likeCard, unlikeCard} from './api.js';\r\nimport {openPopupDef, closePopupDef, addClosePopupButtonListener, addClosePopupByOverlayListener, renderLoading} from './modal.js';\r\n // @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst deletePopup = document.querySelector('.popup_type_delete');\r\nconst deleteForm = deletePopup.querySelector('.popup__form');\r\n// @todo: Функция создания карточки\r\nexport function createCard(item, userId, deleteSubmit, cardLikeToggle, openPopupImg) {\r\n  const itemCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = itemCard.querySelector('.card__image');\r\n  const deleteButton = itemCard.querySelector('.card__delete-button');\r\n  const likeButton = itemCard.querySelector('.card__like-button');\r\n  const likesCount = itemCard.querySelector('.likes__number');\r\n  cardImage.src = item.link;\r\n  cardImage.alt = item.name;\r\n  likesCount.textContent = item.likes.length;\r\n  itemCard.querySelector('.card__title').textContent = item.name;\r\n  if (item.owner._id != userId) {\r\n    deleteButton.style.display = 'none';\r\n    deleteButton.disabled = 'true';\r\n  } else {deleteButton.addEventListener('click', () => deleteSubmit(deletePopup, item._id, itemCard));}\r\n  \r\n  if (item.likes.some(like => like._id === userId)) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  };\r\n  \r\n  likeButton.addEventListener('click', () => cardLikeToggle(likeButton, item._id, likesCount));\r\n  cardImage.addEventListener('click', () => openPopupImg(item));\r\n  return itemCard;\r\n};\r\n\r\nlet cardToDeleteId, cardToDelete;\r\n\r\nexport function deleteSubmit(deletePopup, cardId, card) {\r\n  openPopupDef(deletePopup);\r\n  cardToDelete = card;\r\n  cardToDeleteId = cardId;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\nexport function deleteCard(cardId, card) {\r\n  apiDeleteCard(cardId)\r\n    .then(() => {\r\n    card.remove()})\r\n    .catch(handleErr)\r\n};\r\n\r\ndeleteForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  deleteCard(cardToDeleteId, cardToDelete);\r\n  closePopupDef(deletePopup);\r\n});\r\n\r\n  // Карточка лайкнута\r\n  export function cardLikeToggle(element, cardId, likesCountElement) {\r\n    const likeMethod = element.classList.contains('card__like-button_is-active')?unlikeCard(cardId):likeCard(cardId);\r\n    likeMethod.then(data => {\r\n      element.classList.toggle('card__like-button_is-active');\r\n      likesCountElement.textContent = data.likes.length;\r\n    }) \r\n    .catch(handleErr)\r\n  }\r\n    \r\n","\r\nexport const showInputError = (formElement, inputElement, errorMessage, validConfiguration) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.add(validConfiguration.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validConfiguration.errorClass);\r\n};\r\n\r\nexport const hideInputError = (formElement, inputElement, validConfiguration) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validConfiguration.inputErrorClass);\r\n    errorElement.classList.remove(validConfiguration.errorClass);\r\n    errorElement.textContent = '';\r\n};\r\n\r\nexport const isValid = (formElement, inputElement, validConfiguration) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity(\"\");\r\n    }\r\n\r\n\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, validConfiguration);\r\n    } else {\r\n        hideInputError(formElement, inputElement, validConfiguration);\r\n    }\r\n};\r\n\r\nexport const setEventListeners = (formElement, validConfiguration) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validConfiguration.inputSelector));\r\n    const buttonElement = formElement.querySelector(validConfiguration.submitButtonSelector);\r\n    toggleButtonState(inputList, buttonElement, validConfiguration);\r\n    inputList.forEach((inputElement) => {\r\n        inputElement.addEventListener('input', () => {\r\n            isValid(formElement, inputElement, validConfiguration);\r\n            toggleButtonState(inputList, buttonElement, validConfiguration);\r\n        });\r\n    });\r\n};\r\n\r\nexport const enableValidation = (validConfiguration) => {\r\n    const formList = Array.from(document.querySelectorAll(validConfiguration.formSelector));\r\n    formList.forEach((formElement) => {\r\n        setEventListeners(formElement,validConfiguration);\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const hasInvalidInput = (inputList) => {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n};\r\n\r\nexport const toggleButtonState = (inputList, buttonElement, validConfiguration) => {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validConfiguration.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validConfiguration.inactiveButtonClass);\r\n    }\r\n}\r\n\r\nexport const resetFormValidation = (formElement, validConfiguration) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validConfiguration.inputSelector));\r\n    inputList.forEach((inputElement) => {\r\n        hideInputError(formElement, inputElement, validConfiguration);\r\n    });\r\n};\r\n","import '../pages/index.css';\r\n\r\nimport {createCard, deleteCard, cardLikeToggle, deleteSubmit} from './card.js';\r\nimport {openPopupDef, closePopupDef, addClosePopupButtonListener, addClosePopupByOverlayListener, renderLoading} from './modal.js';\r\nimport {enableValidation, resetFormValidation, resetButtonState} from './validation.js';\r\nimport {getInitialCards, getUserData, updateUser, handleErr, addNewCard, avatarUser} from './api.js';\r\n// @todo: DOM узлы\r\n const placesList = document.querySelector('.places__list');\r\n // переменные для открытия модальных окон\r\nconst allPopup = document.querySelectorAll('.popup');\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\nconst avatarButton = document.querySelector('.profile__image');\r\nconst editPopup = document.querySelector('.popup_type_edit');\r\nconst popupwithImage = document.querySelector('.popup_type_image');\r\nconst popupImage = document.querySelector('.popup__image');\r\nconst newCard = document.querySelector('.popup_type_new-card');\r\nconst avatarPopup = document.querySelector('.popup_type_avatar');\r\n\r\n// Находим форму в DOM\r\nconst editFormElement = editPopup.querySelector('.popup__form');// Воспользуйтесь методом querySelector()\r\nconst nameInput = editFormElement.querySelector('.popup__input_type_name');// Воспользуйтесь инструментом .querySelector()\r\nconst jobInput = editFormElement.querySelector('.popup__input_type_description');// Воспользуйтесь инструментом .querySelector()\r\nconst saveButtonEdit = editFormElement.querySelector('.popup__button');\r\n// Выберите элементы, куда должны быть вставлены значения полей\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profilePicture = document.querySelector('.profile__image');\r\n\r\nconst formCard = newCard.querySelector('.popup__form');// Воспользуйтесь методом querySelector()\r\nconst cardNameInput = formCard.querySelector('.popup__input_type_card-name');// Воспользуйтесь инструментом .querySelector()\r\nconst urlInput = formCard.querySelector('.popup__input_type_url');// Воспользуйтесь инструментом .querySelector()\r\nconst saveButtonCard = formCard.querySelector('.popup__button');\r\n\r\nconst avatarForm = avatarPopup.querySelector('.popup__form');\r\nconst avatarLinkInput = avatarForm.querySelector('.popup__input_type_avatar');\r\nconst saveButtonAvatar = avatarForm.querySelector('.popup__button');\r\n\r\nPromise.all([getUserData(), getInitialCards()\r\n]).then(([userData, cardData]) => {\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    profilePicture.style.backgroundImage = `url(${userData.avatar})`;\r\n    const userId = userData._id;\r\n    // @todo: Вывести карточки на страницу\r\n    cardData.forEach(function(item) {\r\n        const cardElement = createCard(item, userId, deleteSubmit, cardLikeToggle, openPopupImg);\r\n        placesList.append(cardElement); \r\n    });\r\n  })\r\n  .catch(handleErr);\r\n\r\n//функция вызова попапа картинки\r\nfunction openPopupImg(item) {\r\n    openPopupDef(popupwithImage);\r\n    popupImage.src = item.link;\r\n    popupImage.alt = item.name;\r\n    const popupTitle = document.querySelector('.popup__caption');\r\n    popupTitle.textContent = item.name;\r\n}\r\n\r\n//функции для открытия конкретных окон\r\neditButton.addEventListener('click', () => {\r\n    openPopupDef(editPopup);\r\n    nameInput.value = profileTitle.textContent;\r\n    jobInput.value = profileDescription.textContent;\r\n    resetFormValidation(editPopup, validConfiguration);\r\n});\r\n\r\naddButton.addEventListener('click', () => {\r\n    openPopupDef(newCard);\r\n    cardNameInput.value = \"\";\r\n    urlInput.value = \"\";\r\n    resetFormValidation(newCard, validConfiguration);\r\n});\r\n\r\navatarButton.addEventListener('click', () => {\r\n    openPopupDef(avatarPopup);\r\n    avatarLinkInput.value = profilePicture.style.backgroundImage.slice(5, -2);\r\n    resetFormValidation(avatarPopup, validConfiguration);\r\n});\r\n\r\n//функции для закрытия конкретных окон\r\nallPopup.forEach(popup => {\r\n    addClosePopupButtonListener(popup);\r\n    addClosePopupByOverlayListener(popup)\r\n})\r\n\r\n// Обработчик «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction editFormSubmit(evt) {\r\n    evt.preventDefault(); \r\n    renderLoading(true, saveButtonEdit);\r\n    const nameValue = nameInput.value;\r\n    const jobValue = jobInput.value;\r\n    editFormElement.reset();\r\n    updateUser(nameValue, jobValue).then((userData) => {\r\n         // Вставьте новые значения с помощью textContent\r\n        profileTitle.textContent = userData.name;\r\n        profileDescription.textContent = userData.about;\r\n        closePopupDef(editPopup);\r\n    })\r\n        .catch(handleErr)\r\n        .finally(() => {\r\n        renderLoading(false, saveButtonEdit);\r\n    });\r\n}\r\neditFormElement.addEventListener('submit', editFormSubmit); \r\n\r\n// Обработчик «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction avatarFormSubmit(evt) {\r\n    evt.preventDefault(); \r\n    renderLoading(true, saveButtonAvatar);\r\n    const avatarUrl = avatarLinkInput.value;\r\n    avatarUser(avatarUrl).then((userData) => {\r\n        profilePicture.style.backgroundImage = `url(${userData.avatar})`;\r\n        avatarForm.reset();\r\n        closePopupDef(avatarPopup);\r\n    })\r\n    .catch(handleErr)\r\n    .finally(() => {\r\n        renderLoading(false, saveButtonAvatar);\r\n    });\r\n}\r\navatarForm.addEventListener('submit', avatarFormSubmit); \r\n\r\n// Обработчик «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction cardFormSubmit(evt) {\r\n    evt.preventDefault(); \r\n    renderLoading(true, saveButtonCard);\r\n    const cardNameValue = cardNameInput.value;\r\n    const urlValue = urlInput.value;\r\n    function addCard(cardData) {\r\n        const cardElement = createCard(cardData, cardData.owner._id, deleteSubmit, cardLikeToggle, openPopupImg);\r\n        placesList.prepend(cardElement); \r\n    };\r\n\r\n    addNewCard(cardNameValue, urlValue).then(cardData => {\r\n    // Добавляем новую карточку на страницу\r\n        addCard(cardData);\r\n        formCard.reset();\r\n        closePopupDef(newCard);\r\n    })\r\n    .catch(handleErr)\r\n    .finally(() => {\r\n        renderLoading(false, saveButtonCard);\r\n    });\r\n}\r\nformCard.addEventListener('submit', cardFormSubmit); \r\n\r\n\r\nexport const validConfiguration = ({\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__input-error_active'\r\n  });\r\n\r\nenableValidation(validConfiguration);\r\n\r\n\r\n"],"names":["config","baseUrl","headers","authorization","handleRes","res","ok","json","Promise","reject","concat","status","handleErr","err","console","log","openPopupDef","element","classList","add","document","addEventListener","addCloseEscListener","closePopupDef","remove","removeEventListener","evt","key","querySelector","renderLoading","isLoading","button","textContent","cardToDeleteId","cardToDelete","cardTemplate","content","deletePopup","createCard","item","userId","deleteSubmit","cardLikeToggle","openPopupImg","itemCard","cloneNode","cardImage","deleteButton","likeButton","likesCount","src","link","alt","name","likes","length","owner","_id","style","display","disabled","some","like","cardId","card","likesCountElement","contains","fetch","method","then","unlikeCard","likeCard","data","toggle","catch","preventDefault","apiDeleteCard","hideInputError","formElement","inputElement","validConfiguration","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","resetFormValidation","Array","from","querySelectorAll","inputSelector","forEach","placesList","allPopup","editButton","addButton","avatarButton","editPopup","popupwithImage","popupImage","newCard","avatarPopup","editFormElement","nameInput","jobInput","saveButtonEdit","profileTitle","profileDescription","profilePicture","formCard","cardNameInput","urlInput","saveButtonCard","avatarForm","avatarLinkInput","saveButtonAvatar","all","_ref","_ref2","userData","cardData","about","backgroundImage","avatar","cardElement","append","value","slice","popup","target","addClosePopupByOverlayListener","nameValue","jobValue","reset","body","JSON","stringify","updateUser","finally","avatarUrl","cardNameValue","urlValue","prepend","addCard","formSelector","submitButtonSelector","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}