{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-18',\r\n    headers: {\r\n      authorization: 'fb23e767-a971-4593-a4ab-12aecf4b3efd',\r\n      'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nconst handleRes = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const handleErr = (err) => {\r\n    console.log(err);\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n      return fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers\r\n      })\r\n      .then(handleRes)\r\n      .catch(handleErr);\r\n}\r\n\r\nexport const getUserData = () => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers\r\n      })\r\n      .then(handleRes)\r\n      .catch(handleErr);\r\n}\r\n\r\nexport const addUser = (nameValue, jobValue) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n          name: nameValue,\r\n          about: jobValue\r\n        })\r\n      })\r\n      .catch(handleErr);\r\n}\r\n\r\nexport const addNewCard = (cardNameValue, urlValue) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n          name: cardNameValue,\r\n          link: urlValue\r\n        })\r\n      })\r\n    .then(handleRes)\r\n    .catch(handleErr);\r\n}\r\n\r\nexport const apiDeleteCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n    .then(handleRes)\r\n    .catch(handleErr);\r\n}\r\n\r\nexport const unlikeCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n    .then(handleRes)\r\n    .catch(handleErr);\r\n}\r\n\r\nexport const likeCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n    })\r\n    .then(handleRes)\r\n    .catch(handleErr);\r\n}\r\n\r\nexport const avatarUser = (avatarUrl) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarUrl\r\n      })\r\n    })\r\n    .then(handleRes)\r\n    .catch(handleErr);\r\n}\r\n\r\n","\r\n//базовые функции открытия и закрытия (для функций кликеров дальше)\r\nexport function openPopupDef(element) {\r\n    element.classList.add('popup_is-opened');\r\n    element.classList.add('popup_is-animated');\r\n    document.addEventListener('keydown', addCloseEscListener)\r\n}\r\n\r\nexport function closePopupDef(element) {\r\n    element.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', addCloseEscListener)\r\n}\r\n\r\n//функции для закрытия окон через крестик, esc и фон (для всех сразу)\r\nexport function addClosePopupButtonListener(element) {\r\n    const closeButton = element.querySelector('.popup__close');\r\n    closeButton.addEventListener('click', () => {\r\n        closePopupDef(element);\r\n    })\r\n}\r\n\r\nexport function addClosePopupByOverlayListener(element) {\r\n    element.addEventListener('click', function(evt) {\r\n        if (evt.target.classList.contains('popup_is-opened')) {\r\n            closePopupDef(element);\r\n        }\r\n    })\r\n}\r\n\r\nexport function addCloseEscListener(evt)  { \r\n    if (evt.key === 'Escape')  { \r\n        closePopupDef(document.querySelector('.popup_is-opened')); \r\n    } \r\n}\r\n\r\nexport function renderLoading(isLoading, button) {\r\n    if (isLoading) {\r\n        button.textContent = 'Сохранение...';\r\n      }\r\n      else {\r\n        button.textContent = 'Сохранить';\r\n      }\r\n}\r\n","import {handleErr, apiDeleteCard, likeCard, unlikeCard} from './api.js';\r\nimport {openPopupDef, closePopupDef, addClosePopupButtonListener, addClosePopupByOverlayListener, renderLoading} from './modal.js';\r\n // @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst deletePopup = document.querySelector('.popup_type_delete');\r\nconst deleteForm = deletePopup.querySelector('.popup__form');\r\n// @todo: Функция создания карточки\r\nexport function createCard(item, userId, deleteSubmit, cardLikeToggle, openPopupImg) {\r\n  const itemCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = itemCard.querySelector('.card__image');\r\n  const deleteButton = itemCard.querySelector('.card__delete-button');\r\n  const likeButton = itemCard.querySelector('.card__like-button');\r\n  const likesCount = itemCard.querySelector('.likes__number');\r\n  cardImage.src = item.link;\r\n  cardImage.alt = item.name;\r\n  likesCount.textContent = item.likes.length;\r\n  itemCard.querySelector('.card__title').textContent = item.name;\r\n  if (item.owner._id != userId) {\r\n    deleteButton.style.display = 'none';\r\n    deleteButton.disabled = 'true';\r\n  } else {deleteButton.addEventListener('click', () => deleteSubmit(deletePopup, item._id, itemCard));}\r\n  \r\n  if (item.likes.some(like => like._id === userId)) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  };\r\n  \r\n  likeButton.addEventListener('click', () => cardLikeToggle(likeButton, item._id, likesCount));\r\n  cardImage.addEventListener('click', () => openPopupImg(item));\r\n  return itemCard;\r\n};\r\n\r\nexport function deleteSubmit(deletePopup, cardId, card) {\r\n  openPopupDef(deletePopup);\r\n  addClosePopupButtonListener(deletePopup);\r\n  addClosePopupByOverlayListener(deletePopup);\r\n  deleteForm.addEventListener('submit', (evt) => {\r\n    evt.preventDefault();\r\n    deleteCard(cardId, card);\r\n    closePopupDef(deletePopup);\r\n});\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\nexport function deleteCard(cardId, card) {\r\n  apiDeleteCard(cardId)\r\n    .then(() => {\r\n    card.remove()})\r\n    .catch(handleErr)\r\n};\r\n\r\n  // Карточка лайкнута\r\n  export function cardLikeToggle(element, cardId, likesCountElement) {\r\n    if (element.classList.contains('card__like-button_is-active')) {\r\n        unlikeCard(cardId).then(data => {\r\n            element.classList.toggle('card__like-button_is-active');\r\n            likesCountElement.textContent = data.likes.length;\r\n          }) \r\n          .catch(handleErr)\r\n    } else {\r\n        likeCard(cardId).then(data => {\r\n            element.classList.toggle('card__like-button_is-active');\r\n            likesCountElement.textContent = data.likes.length;\r\n          }) \r\n          .catch(handleErr) \r\n    }\r\n  }\r\n    \r\n","\r\nexport const validConfiguration = ({\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__input-error_active'\r\n  });\r\n\r\nexport const showInputError = (formElement, inputElement, errorMessage, validConfiguration) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.add(validConfiguration.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validConfiguration.errorClass);\r\n};\r\n\r\nexport const hideInputError = (formElement, inputElement, validConfiguration) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validConfiguration.inputErrorClass);\r\n    errorElement.classList.remove(validConfiguration.errorClass);\r\n    errorElement.textContent = '';\r\n};\r\n\r\nexport const isValid = (formElement, inputElement, validConfiguration) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity(\"\");\r\n    }\r\n\r\n\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, validConfiguration);\r\n    } else {\r\n        hideInputError(formElement, inputElement, validConfiguration);\r\n    }\r\n};\r\n\r\nexport const setEventListeners = (formElement, validConfiguration) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validConfiguration.inputSelector));\r\n    const buttonElement = formElement.querySelector(validConfiguration.submitButtonSelector);\r\n    inputList.forEach((inputElement) => {\r\n        inputElement.addEventListener('input', () => {\r\n            isValid(formElement, inputElement, validConfiguration);\r\n            toggleButtonState(inputList, buttonElement, validConfiguration);\r\n        });\r\n    });\r\n};\r\n\r\nexport const enableValidation = (validConfiguration) => {\r\n    const formList = Array.from(document.querySelectorAll(validConfiguration.formSelector));\r\n    formList.forEach((formElement) => {\r\n        setEventListeners(formElement,validConfiguration);\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const hasInvalidInput = (inputList) => {\r\n    return inputList.some((inputElement) => {\r\n        return (!inputElement.validity.valid || inputElement.validity.patternMismatch);\r\n    })\r\n};\r\n\r\nexport const toggleButtonState = (inputList, buttonElement, validConfiguration) => {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validConfiguration.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validConfiguration.inactiveButtonClass);\r\n    }\r\n}\r\n\r\nexport const resetFormValidation = (formElement, validConfiguration) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validConfiguration.inputSelector));\r\n    inputList.forEach((inputElement) => {\r\n        hideInputError(formElement, inputElement, validConfiguration);\r\n    });\r\n    const buttonElement = formElement.querySelector(validConfiguration.submitButtonSelector);\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validConfiguration.inactiveButtonClass);\r\n};\r\n\r\nexport const resetButtonState = (formElement, validConfiguration) => {\r\n    const buttonElement = formElement.querySelector(validConfiguration.submitButtonSelector);\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validConfiguration.inactiveButtonClass);\r\n};","import '../pages/index.css';\r\n\r\nimport {createCard, deleteCard, cardLikeToggle, deleteSubmit} from './card.js';\r\nimport {openPopupDef, closePopupDef, addClosePopupButtonListener, addClosePopupByOverlayListener, renderLoading} from './modal.js';\r\nimport {validConfiguration, enableValidation, resetFormValidation, resetButtonState} from './validation.js';\r\nimport {getInitialCards, getUserData, addUser, handleErr, addNewCard, avatarUser} from './api.js';\r\n// @todo: DOM узлы\r\n const placesList = document.querySelector('.places__list');\r\n // переменные для открытия модальных окон\r\nconst allPopup = document.querySelectorAll('.popup');\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\nconst avatarButton = document.querySelector('.profile__image');\r\nconst editPopup = document.querySelector('.popup_type_edit');\r\nconst popupwithImage = document.querySelector('.popup_type_image');\r\nconst popupImage = document.querySelector('.popup__image');\r\nconst newCard = document.querySelector('.popup_type_new-card');\r\nconst avatarPopup = document.querySelector('.popup_type_avatar');\r\n\r\n// Находим форму в DOM\r\nconst editFormElement = editPopup.querySelector('.popup__form');// Воспользуйтесь методом querySelector()\r\nconst nameInput = editFormElement.querySelector('.popup__input_type_name');// Воспользуйтесь инструментом .querySelector()\r\nconst jobInput = editFormElement.querySelector('.popup__input_type_description');// Воспользуйтесь инструментом .querySelector()\r\nconst saveButtonEdit = editFormElement.querySelector('.popup__button');\r\n// Выберите элементы, куда должны быть вставлены значения полей\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profilePicture = document.querySelector('.profile__image');\r\n\r\nconst formCard = newCard.querySelector('.popup__form');// Воспользуйтесь методом querySelector()\r\nconst cardNameInput = formCard.querySelector('.popup__input_type_card-name');// Воспользуйтесь инструментом .querySelector()\r\nconst urlInput = formCard.querySelector('.popup__input_type_url');// Воспользуйтесь инструментом .querySelector()\r\nconst saveButtonCard = formCard.querySelector('.popup__button');\r\n\r\nconst avatarForm = avatarPopup.querySelector('.popup__form');\r\nconst avatarLinkInput = avatarForm.querySelector('.popup__input_type_avatar');\r\nconst saveButtonAvatar = avatarForm.querySelector('.popup__button');\r\n\r\nPromise.all([getUserData(), getInitialCards()\r\n]).then(([userData, cardData]) => {\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    profilePicture.style.backgroundImage = `url(${userData.avatar})`;\r\n    const userId = userData._id;\r\n    // @todo: Вывести карточки на страницу\r\n    cardData.forEach(function(item) {\r\n        const cardElement = createCard(item, userId, deleteSubmit, cardLikeToggle, openPopupImg);\r\n        placesList.append(cardElement); \r\n    });\r\n  })\r\n  .catch(handleErr);\r\n\r\n//функция вызова попапа картинки\r\nfunction openPopupImg(item) {\r\n    openPopupDef(popupwithImage);\r\n    popupImage.src = item.link;\r\n    popupImage.alt = item.name;\r\n    const popupTitle = document.querySelector('.popup__caption');\r\n    popupTitle.textContent = item.name;\r\n}\r\n\r\n//функции для открытия конкретных окон\r\neditButton.addEventListener('click', () => {\r\n    openPopupDef(editPopup);\r\n    nameInput.value = profileTitle.textContent;\r\n    jobInput.value = profileDescription.textContent;\r\n    resetFormValidation(editPopup, validConfiguration);\r\n});\r\n\r\naddButton.addEventListener('click', () => {\r\n    openPopupDef(newCard);\r\n    cardNameInput.value = \"\";\r\n    urlInput.value = \"\";\r\n    resetButtonState(newCard, validConfiguration);\r\n});\r\n\r\navatarButton.addEventListener('click', () => {\r\n    openPopupDef(avatarPopup);\r\n    avatarLinkInput.value = profilePicture.style.backgroundImage.slice(5, -2);\r\n    resetFormValidation(avatarPopup, validConfiguration);\r\n});\r\n\r\n//функции для закрытия конкретных окон\r\nallPopup.forEach(popup => {\r\n    addClosePopupButtonListener(popup);\r\n    addClosePopupByOverlayListener(popup)\r\n})\r\n\r\n// Обработчик «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction editFormSubmit(evt) {\r\n    evt.preventDefault(); \r\n    renderLoading(true, saveButtonEdit);\r\n    const nameValue = nameInput.value;\r\n    const jobValue = jobInput.value;\r\n    // Вставьте новые значения с помощью textContent\r\n    profileTitle.textContent = nameValue;\r\n    profileDescription.textContent = jobValue;\r\n    editFormElement.reset();\r\n    addUser(nameValue, jobValue).finally(() => {\r\n        renderLoading(false, saveButtonEdit);\r\n    });\r\n    closePopupDef(editPopup);\r\n}\r\neditFormElement.addEventListener('submit', editFormSubmit); \r\n\r\n// Обработчик «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction avatarFormSubmit(evt) {\r\n    evt.preventDefault(); \r\n    renderLoading(true, saveButtonAvatar);\r\n    const avatarUrl = avatarLinkInput.value;\r\n    avatarUser(avatarUrl).then((userData) => {\r\n        profilePicture.style.backgroundImage = `url(${userData.avatar})`;\r\n        avatarForm.reset();\r\n        closePopupDef(avatarPopup);\r\n    })\r\n    .catch(handleErr)\r\n    .finally(() => {\r\n        renderLoading(false, saveButtonAvatar);\r\n    });\r\n\r\n}\r\navatarForm.addEventListener('submit', avatarFormSubmit); \r\n\r\n// Обработчик «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction cardFormSubmit(evt) {\r\n    evt.preventDefault(); \r\n    renderLoading(true, saveButtonCard);\r\n    const cardNameValue = cardNameInput.value;\r\n    const urlValue = urlInput.value;\r\n    function addCard(cardData) {\r\n        const cardElement = createCard(cardData, cardData.owner._id, deleteSubmit, cardLikeToggle, openPopupImg);\r\n        placesList.prepend(cardElement); \r\n    };\r\n\r\n    addNewCard(cardNameValue, urlValue).then(cardData => {\r\n    // Добавляем новую карточку на страницу\r\n        addCard(cardData);\r\n        formCard.reset();\r\n        closePopupDef(newCard);\r\n    })\r\n    .catch(handleErr)\r\n    .finally(() => {\r\n        renderLoading(false, saveButtonCard);\r\n    });\r\n}\r\nformCard.addEventListener('submit', cardFormSubmit); \r\n\r\nenableValidation(validConfiguration);\r\n\r\n\r\n"],"names":["config","baseUrl","headers","authorization","handleRes","res","ok","json","Promise","reject","concat","status","handleErr","err","console","log","openPopupDef","element","classList","add","document","addEventListener","addCloseEscListener","closePopupDef","remove","removeEventListener","addClosePopupButtonListener","querySelector","addClosePopupByOverlayListener","evt","target","contains","key","renderLoading","isLoading","button","textContent","cardTemplate","content","deletePopup","deleteForm","createCard","item","userId","deleteSubmit","cardLikeToggle","openPopupImg","itemCard","cloneNode","cardImage","deleteButton","likeButton","likesCount","src","link","alt","name","likes","length","owner","_id","style","display","disabled","some","like","cardId","card","preventDefault","fetch","method","then","catch","apiDeleteCard","deleteCard","likesCountElement","unlikeCard","data","toggle","likeCard","validConfiguration","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","toggleButtonState","inputList","buttonElement","validity","valid","patternMismatch","hasInvalidInput","resetFormValidation","Array","from","querySelectorAll","forEach","placesList","allPopup","editButton","addButton","avatarButton","editPopup","popupwithImage","popupImage","newCard","avatarPopup","editFormElement","nameInput","jobInput","saveButtonEdit","profileTitle","profileDescription","profilePicture","formCard","cardNameInput","urlInput","saveButtonCard","avatarForm","avatarLinkInput","saveButtonAvatar","all","_ref","_ref2","userData","cardData","about","backgroundImage","avatar","cardElement","append","value","resetButtonState","slice","popup","nameValue","jobValue","reset","body","JSON","stringify","addUser","finally","avatarUrl","cardNameValue","urlValue","prepend","addCard","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}